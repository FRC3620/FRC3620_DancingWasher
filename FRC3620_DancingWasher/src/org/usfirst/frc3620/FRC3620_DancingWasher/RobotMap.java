// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3620.FRC3620_DancingWasher;
    

import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.PIDSource.PIDSourceParameter;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveSpeedController3;
    public static SpeedController driveSpeedController1;
    public static SpeedController driveSpeedController0;
    public static SpeedController driveSpeedController2;
    public static RobotDrive driveRobotDriveMecanum4;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveSpeedController3 = new Talon(3);
        LiveWindow.addActuator("Drive", "Speed Controller 3", (Talon) driveSpeedController3);
        
        driveSpeedController1 = new Talon(1);
        LiveWindow.addActuator("Drive", "Speed Controller 1", (Talon) driveSpeedController1);
        
        driveSpeedController0 = new Talon(0);
        LiveWindow.addActuator("Drive", "Speed Controller 0", (Talon) driveSpeedController0);
        
        driveSpeedController2 = new Talon(2);
        LiveWindow.addActuator("Drive", "Speed Controller 2", (Talon) driveSpeedController2);
        
        driveRobotDriveMecanum4 = new RobotDrive(driveSpeedController1, driveSpeedController3,
              driveSpeedController0, driveSpeedController2);
        
        driveRobotDriveMecanum4.setSafetyEnabled(false);
        driveRobotDriveMecanum4.setExpiration(0.1);
        driveRobotDriveMecanum4.setSensitivity(0.5);
        driveRobotDriveMecanum4.setMaxOutput(1.0);

        driveRobotDriveMecanum4.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        driveRobotDriveMecanum4.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
