// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc3620.FRC3620_DancingWasher.commands;

import edu.wpi.first.wpilibj.Joystick.RumbleType;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc3620.FRC3620_DancingWasher.Robot;
import org.usfirst.frc3620.FRC3620_DancingWasher.subsystems.ShootingSystemState;

/**
 *
 */
public class ShootTShirtCommand extends Command {
	Timer timer = new Timer();

	public ShootTShirtCommand() {
		// Use requires() here to declare subsystem dependencies
		// eg. requires(chassis);

		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
		requires(Robot.shooterSubsystem);

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	}

	// Called just before this Command runs the first time
	protected void initialize()
	{
	}

	// Called repeatedly when this Command is scheduled to run
	protected void execute()
	{
    	if (Robot.shooterSubsystem.currentState == ShootingSystemState.ALLREADY) {
    		Robot.shooterSubsystem.currentState = ShootingSystemState.SHOOTING1;
    	}
    	if (Robot.shooterSubsystem.currentState == ShootingSystemState.T2ONLYREADY) {
    		Robot.shooterSubsystem.currentState = ShootingSystemState.SHOOTING2;
    	}
    	
    	// TODO test code
    	if (Robot.shooterSubsystem.currentState == ShootingSystemState.FILLING1) {
    		Robot.shooterSubsystem.currentState = ShootingSystemState.SWITCHING;
    	}
    	if (Robot.shooterSubsystem.currentState == ShootingSystemState.FILLING2) {
    		Robot.shooterSubsystem.currentState = ShootingSystemState.ALLREADY;
    	}
    	
	}

	// Make this return true when this Command no longer needs to run execute()
	protected boolean isFinished()
	{
		return true;
	}

	// Called once after isFinished returns true
	protected void end()
	{
	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	protected void interrupted()
	{
	}

}
