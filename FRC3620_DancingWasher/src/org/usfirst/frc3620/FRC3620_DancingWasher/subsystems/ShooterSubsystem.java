// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3620.FRC3620_DancingWasher.subsystems;

import org.usfirst.frc3620.FRC3620_DancingWasher.RobotMap;
import org.usfirst.frc3620.FRC3620_DancingWasher.commands.*;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.DoubleSolenoid.Value;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class ShooterSubsystem extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    DoubleSolenoid tank1Solenoid = RobotMap.shooterSubsystemTank1Solenoid;
    Relay tank1Shoot = RobotMap.shooterSubsystemTank1Shoot;
    AnalogInput tank1PressureSensor = RobotMap.shooterSubsystemTank1PressureSensor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    public void openFill1() {
    	tank1Solenoid.set(Value.kForward);
    	
    }
    public void closeFill1() {
    	tank1Solenoid.set(Value.kReverse);
    }
    public void startShooter1() {
    	tank1Shoot.set(Relay.Value.kForward);
    	
    }
    public void stopShooter1() {
    	tank1Shoot.set(Relay.Value.kOff);
    	
    }
    public double getTank1Pressure() {
    	double voltage = tank1PressureSensor.getVoltage();
    	double pressure = (voltage - .5) * 20;
    	// TODO fix this calculation 
    	return pressure;
    	
    }
}

